/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.6/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
}

// Define the main class for the application
mainClassName = 'ist.meic.pa.GenericFunctions.WithGenericFunctions'

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    // https://mvnrepository.com/artifact/org.javassist/javassist
    compile group: 'org.javassist', name: 'javassist', version: '3.21.0-GA'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

run {
    // Redirects standardInput to a File named app.in
    // Java's "System In" in will be obtained from this file.
    // standardInput = new FileInputStream('app.in')

    // Java's System in will be obtained from the console
    standardInput = System.in

    // Redirects console output to file app.out
    // standardOutput = new FileOutputStream('app.out')

    // If Arguments are static
    args = ["MainCom"]

    // Pass args when running in console: gradle run -PappArgs="['arg1','arg2']"
    if (project.hasProperty("appArgs")) {
        // Equivalent to doing args = args + Eval.me(appArgs)
        // args Eval.me(appArgs)

        // Equivalent to args = Eval.me(appArgs)
        args = Eval.me(appArgs)
    }
}